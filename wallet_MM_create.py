"""
üîë wallet_MM_create.py - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤

–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
- üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è seed-—Ñ—Ä–∞–∑ (12 –∏–ª–∏ 24 —Å–ª–æ–≤–∞) –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ
- üíº –°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤ –∏–∑ –æ–¥–Ω–æ–π seed-—Ñ—Ä–∞–∑—ã
- üìä –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏ –∏ –∞–¥—Ä–µ—Å–∞–º–∏
- üóÇÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ wallet/ —Å –¥–∞—Ç–æ–π
- üîÑ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:
- input_words: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ seed-—Ñ—Ä–∞–∑ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
- input_length: 12 –∏–ª–∏ 24 —Å–ª–æ–≤–∞ –≤ seed-—Ñ—Ä–∞–∑–µ
- input_key: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—à–µ–ª—å–∫–æ–≤ –Ω–∞ –æ–¥–Ω—É seed-—Ñ—Ä–∞–∑—É

–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
- Excel —Ñ–∞–π–ª—ã —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏: wallet address, private keys, sid fraze
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: wallet_MM_YYYY-MM-DD_HH-MM-SS.xlsx
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ø–∞–ø–∫–µ wallet/ (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è Git)

‚ö†Ô∏è –í–ê–ñ–ù–û: –§–∞–π–ª—ã —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏ –ù–ï –¥–æ–ª–∂–Ω—ã –ø–æ–ø–∞–¥–∞—Ç—å –≤ Git!

–ê–≤—Ç–æ—Ä: sergeypodobniy
–î–∞—Ç–∞: 2025
"""

from mnemonic import Mnemonic
from web3 import Web3
import pandas as pd
from eth_account import Account
import os
from datetime import datetime

def get_user_input(prompt, valid_values):
    while True:
        try:
            value = int(input(prompt))
            if value in valid_values:
                return value
            else:
                print(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π: {valid_values}")
        except ValueError:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

input_words = get_user_input('–°–∫–æ–ª—å–∫–æ —Å–∏–¥ —Ñ—Ä–∞–∑ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å?\n', range(1, 1000))
input_length = get_user_input('–°–∫–æ–ª—å–∫–æ —Å–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, 12 –∏–ª–∏ 24?\n', [12, 24])
input_key = get_user_input('–°–∫–æ–ª—å–∫–æ –∫–æ—à–µ–ª—å–∫–æ–≤ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫ –æ–¥–Ω–æ–π —Å–∏–¥ —Ñ—Ä–∞–∑–µ?\n', range(1, 1000))

w3 = Web3(Web3.HTTPProvider())

def gen_key(input_words, input_length, input_key):
    Account.enable_unaudited_hdwallet_features()
    data = []
    mnemo = Mnemonic("english")

    for m in range(input_words):
        words = mnemo.generate(strength=128 if input_length == 12 else 256)

        for i in range(input_key):
            acct = Account.from_mnemonic(
                words,
                account_path=f"m/44'/60'/0'/0/{i}"
            )
            addr = acct.address
            key = w3.to_hex(acct._private_key)
            data.append({'wallet address': addr, 'private keys': key, 'sid fraze': words})

    df = pd.DataFrame(data, columns=['wallet address', 'private keys', 'sid fraze'])

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ 'wallet', –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    wallet_dir = os.path.join(os.getcwd(), 'wallet')
    if not os.path.exists(wallet_dir):
        os.makedirs(wallet_dir)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ —Å –¥–∞—Ç–æ–π —Å–æ–∑–¥–∞–Ω–∏—è
    current_date = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    file_name = f"wallet_MM_{current_date}.xlsx"
    file_path = os.path.join(wallet_dir, file_name)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
    if not os.path.isfile(file_path):
        df.to_excel(file_path, index=False)
    else:
        with pd.ExcelWriter(file_path, mode='a', engine='openpyxl') as writer:
            df.to_excel(writer, sheet_name='Sheet1', index=False, header=False)

gen_key(input_words, input_length, input_key)
